# singleton_pattern.py

class Singleton:
    _instance = None

    def __new__(cls):
        if not cls._instance:
            cls._instance = super(Singleton, cls).__new__(cls)
        return cls._instance

def main():
    singleton1 = Singleton()
    singleton2 = Singleton()

    print(singleton1 == singleton2)  # Output: True

if __name__ == "__main__":
    main()
